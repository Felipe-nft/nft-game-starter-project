[{"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/index.js":"1","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/App.js":"2","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js":"3","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/constants.js":"4","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js":"5","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js":"6"},{"size":219,"mtime":1650454370589,"results":"7","hashOfConfig":"8"},{"size":7556,"mtime":1650549430914,"results":"9","hashOfConfig":"8"},{"size":5936,"mtime":1650548882830,"results":"10","hashOfConfig":"8"},{"size":615,"mtime":1650544066241,"results":"11","hashOfConfig":"8"},{"size":6895,"mtime":1650550272578,"results":"12","hashOfConfig":"8"},{"size":261,"mtime":1650454370587,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13t47ov",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/index.js",[],["28","29"],"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/App.js",[],"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/SelectCharacter/index.js",["30"],"// index.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./SelectCharacter.css\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n\nconst SelectCharacter = ({ setCharacterNFT }) => {\n    const [characters, setCharacters] = useState([]);\n    const [gameContract, setGameContract] = useState(null);\n    const [mintingCharacter, setMintingCharacter] = useState(false);\n\n    // NFT キャラクターを Mint します。\n    const mintCharacterNFTAction = (characterId) => async () => {\n        try {\n            if (gameContract) {\n                setMintingCharacter(true);\n\n                console.log(\"Minting character in progress...\");\n                const mintTxn = await gameContract.mintCharacterNFT(characterId);\n                await mintTxn.wait();\n                console.log(\"mintTxn:\", mintTxn);\n                setMintingCharacter(false);\n            }\n        } catch (error) {\n            console.warn(\"MintCharacterAction Error:\", error);\n            setMintingCharacter(false);\n        }\n    };\n  \n    // ページがロードされた瞬間に下記を実行します。\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum) {\n            const provider = new ethers.providers.Web3Provider(ethereum);\n            const signer = provider.getSigner();\n            const gameContract = new ethers.Contract(\n                CONTRACT_ADDRESS,\n                myEpicGame.abi,\n                signer\n            );\n  \n            // gameContract の状態を更新します。\n            setGameContract(gameContract);\n        } else {\n            console.log(\"Ethereum object not found\");\n        }\n    }, []);\n\n    useEffect(() => {\n        // NFT キャラクターのデータをスマートコントラクトから取得します。\n        const getCharacters = async () => {\n            try {\n                console.log(\"Getting contract characters to mint\");\n                // ミント可能な全 NFT キャラクター をコントラクトをから呼び出します。\n                const charactersTxn = await gameContract.getAllDefaultCharacters();\n      \n                console.log(\"charactersTxn:\", charactersTxn);\n      \n                // すべてのNFTキャラクターのデータを変換します。\n                const characters = charactersTxn.map((characterData) =>\n                    transformCharacterData(characterData)\n                );\n      \n                // ミント可能なすべてのNFTキャラクターの状態を設定します。\n                setCharacters(characters);\n            } catch (error) {\n                console.error(\"Something went wrong fetching characters:\", error);\n            }\n        };\n        // イベントを受信したときに起動するコールバックメソッド onCharacterMint を追加します。\n        const onCharacterMint = async (sender, tokenId, characterIndex) => {\n            console.log(\n                `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n            );\n            // NFT キャラクターが Mint されたら、コントラクトからメタデータを受け取り、アリーナ（ボスとのバトルフィールド）に移動するための状態に設定します。\n            if (gameContract) {\n                const characterNFT = await gameContract.checkIfUserHasNFT();\n                console.log(\"CharacterNFT: \", characterNFT);\n                setCharacterNFT(transformCharacterData(characterNFT));\n                alert(\n                    `NFT キャラクーが Mint されました -- リンクはこちらです: https://rinkeby.rarible.com/token/${\n                      gameContract.address\n                    }:${tokenId.toNumber()}?tab=details`\n                );\n            }\n        };\n\n        if (gameContract) {\n            getCharacters();\n            // リスナーの設定：NFT キャラクターが Mint された通知を受け取ります。\n            gameContract.on(\"CharacterNFTMinted\", onCharacterMint);\n        }\n\n        return () => {\n            // コンポーネントがマウントされたら、リスナーを停止する。\n\n            if (gameContract) {\n                gameContract.off(\"CharacterNFTMinted\", onCharacterMint);\n            }\n        };\n    }, [gameContract]);\n\n    // NFT キャラクターをフロントエンドにレンダリングするメソッドです。\n    const renderCharacters = () =>\n        characters.map((character, index) => (\n            <div className=\"character-item\" key={character.name}>\n                <div className=\"name-container\">\n                <p>{character.name}</p>\n                </div>\n                <img src={character.imageURI} alt={character.name} />\n                <button\n                    type=\"button\"\n                    className=\"character-mint-button\"\n                    onClick={mintCharacterNFTAction(index)}\n                >{`Mint ${character.name}`}</button>\n            </div>\n        ));\n  \n    return (\n        <div className=\"select-character-container\">\n          <h2>⏬ 一緒に戦う NFT キャラクターを選択 ⏬</h2>\n          {characters.length > 0 && (\n            <div className=\"character-grid\">{renderCharacters()}</div>\n          )}\n          {/* mintingCharacter = trueの場合のみ、ローディングマークを表示します。*/}\n          {mintingCharacter && (\n            <div className=\"loading\">\n               <div className=\"indicator\">\n                <LoadingIndicator />\n                <p>Minting In Progress...</p>\n              </div>\n            </div>\n          )}\n        </div>\n    );\n};\nexport default SelectCharacter;","/Users/taji/ETH-NFT-game/nft-game-starter-project/src/constants.js",[],"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js",["31"],"/Users/taji/ETH-NFT-game/nft-game-starter-project/src/Components/LoadingIndicator/index.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":103,"column":8,"nodeType":"38","endLine":103,"endColumn":22,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":93,"column":6,"nodeType":"38","endLine":93,"endColumn":20,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCharacterNFT'. Either include it or remove the dependency array. If 'setCharacterNFT' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["43"],["44"],"no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},{"desc":"45","fix":"47"},"Update the dependencies array to be: [gameContract, setCharacterNFT]",{"range":"48","text":"49"},{"range":"50","text":"49"},[3905,3919],"[gameContract, setCharacterNFT]",[2817,2831]]